# mongodb
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=test

spring.profiles.active=dev

#logging
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.file.path= C:\\logs\\addresses

## Rabbitmq configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=kiran
spring.rabbitmq.password=kiran

## Queue and exchange configuration properties for rabbitmq
rabbitmq.queue=com.vasanti.queue.addresses
rabbitmq.addresses.request.queue = com.vasanti.addresses.request.queue
rabbitmq.addresses.response.queue = com.vasanti.addresses.response.queue
rabbitmq.type.topic.exchange=exchange-topic-vasanti-addresses
rabbitmq.type.direct.exchange=exchange-direct-vasanti-exchange
rabbitmq.routingkey=addresseskey

spring.application.name=addresses
#server.port=8082

# SSL Details for self signed certificate
# Generate Self signed SSL running this command from jdk bin directory
# - keytool -genkey -alias alias_localhost_ssl -keyalg RSA -keysize 2048 -validity 700 -keypass changeit -storepass changeit -keystore localhost_ssl.jks
# - Export the create certificate in jks format to cacerts file of JDK used by program by using below command
# - keytool -export -alias alias_localhost_ssl -keystore localhost_ssl.jks -rfc -file selfSigned.cer
# for debug  -Djavax.net.debug=all -Djavax.net.ssl.trustStore=localhost_ssl.jks
server.port=8443
server.ssl.key-alias=alias_localhost_ssl
server.ssl.key-password=changeit
server.ssl.key-store=classpath:localhost_ssl.jks
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.trust-store=classpath:cacerts
server.ssl.trust-store-password=changeit
server.ssl.enabled=true
